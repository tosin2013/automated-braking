{{- if .Values.enabled }}
{{- if .Values.route.enabled }}
---
# S3 API Route
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: minio-s3
  namespace: {{ .Values.namespace | default "distance-prediction" }}
  labels:
    app: minio
    app.kubernetes.io/component: s3-api
  annotations:
    {{- range $key, $val := .Values.annotations }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  # Route host: <route-name>-<namespace>.apps.<apps-domain>
  # Uses appsDomain variable for cluster portability
  host: minio-s3-{{ .Values.namespace | default "distance-prediction" }}.apps.{{ .Values.route.appsDomain | default "cluster.local" }}
  port:
    targetPort: s3        # MinIO S3 API on port 9000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  to:
    kind: Service
    name: minio
    weight: 100
  wildcardPolicy: None
---
# Console Route (MinIO console served from S3 API endpoint)
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: minio-console
  namespace: {{ .Values.namespace | default "distance-prediction" }}
  labels:
    app: minio
    app.kubernetes.io/component: console
  annotations:
    {{- range $key, $val := .Values.annotations }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
spec:
  # Route host: <route-name>-<namespace>.apps.<apps-domain>
  # Uses appsDomain variable for cluster portability
  host: minio-console-{{ .Values.namespace | default "distance-prediction" }}.apps.{{ .Values.route.appsDomain | default "cluster.local" }}
  port:
    targetPort: s3  # Console served from S3 API (port 9000)
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  to:
    kind: Service
    name: minio
    weight: 100
  wildcardPolicy: None
{{- end }}
{{- end }}
